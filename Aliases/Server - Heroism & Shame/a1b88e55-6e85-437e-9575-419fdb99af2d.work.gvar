<drac2>
ch=character()
# Get highest skill bonus for working
skill_b=max(ch.skills['performance'], wisdomMod, intelligenceMod)
# Set Base roll string (adv or dis)
base_roll = "1d20+"
if pargs.adv() == 1:
    base_roll = "2d20kh1+"
elif pargs.adv() == -1:
    base_roll = "2d20kl1+" 
# Get argument bonus (like guidance)
if pargs.get("b"):
    bonus=pargs.get("b")[0]
else:
    bonus = 0

# Combine roll string with skill bonus and arg bonus
if bonus != 0:
    roll_str = base_roll + str(skill_b) + "+" + str(bonus)
else:
    roll_str = base_roll + str(skill_b)

# Check to see how many times to roll
if pargs.get("rr"):
    repeat = int(pargs.get("rr")[0])
else:
    repeat = 1

# Roll all times and add to list
rolls = []
for i in range(repeat):
    rolls.append(vroll(roll_str))
</drac2>
-desc """
For working and maintaining a profession you can either make an intelligence, wisdom or performance check and your earnings are determined on the roll.
◽ 9 or lower: 1 gp
◽ 10-14: 7gp
◽ 15-20: 14gp
◽ 21+: 39gp
"""
<drac2>
final_string = ""
current_roll = 0
total_gp = 0
# Calculate and List all Work Rolls
for x in rolls:
    current_roll += 1
    coins = 0
    if x.total >= 21:
        coins = 39
    elif x.total >= 15:
        coins = 14
    elif x.total >= 10:
        coins = 7
    else:
        coins = 1
    total_gp += coins
    final_string += '-f "Roll #'+str(current_roll)+'|'+str(x)+'\nCoins: '+str(coins)+'  gp"\n'
final_string += '-f "Total Coins: '+str(total_gp)+' gp"\n'
# Add coins to bag
bags_before = load_json(get('bags', 0))
if bags_before is not 0:
    coin_bag_before = [bag for bag in bags_before if bag[0] == 'Coin Pouch'][0]
    index = bags_before.index(coin_bag_before)
    coins_before = coin_bag_before[1]['gp']
    coin_bag_before[1]['gp'] += total_gp
    coins_after = coin_bag_before[1]['gp']
    final_string += f'-f "Added Coins to Bag|{coins_before}gp -> {coins_after}gp"'
    bags_before[index] = coin_bag_before
    ch.set_cvar('bags', dump_json(bags_before))

return final_string
</drac2>
<drac2>
if pargs.get("w"):
    return "-title \"**"+name+" working at "+pargs.get("w")[0]+"\"**"
else:
    return "-title \"**"+name+" doing Work DT\"**"
</drac2>
-footer '!work | Dr Turtle#1771'