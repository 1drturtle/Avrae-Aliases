tembed -thumb <image> -color <color>
<drac2>
# Written By: MrRobinhood5#1999
# loads primary variables
pargs, title, returnstr, newheat, newcred = argparse(&ARGS&), load_json(get_gvar("48729b0f-c54a-4a33-b2ca-ff6c92b19700"))[vroll('1d400').total-1].thing, "", 0, 0
pp, gp, sp, cp, npp, ngp, nsp, ncp = 0, 0, 0, 0, 0, 0, 0, 0
# loads secondary variables
rollstr, repeat, mainstringy, me= "2d20kh1+" if pargs.adv() == 1 else "1d20+", 1 if not pargs.get("rr") else int(pargs.get("rr")[0]), [], character()
# presets the needed counters
me.create_cc_nx("Heat", 0, None, None, None)
me.create_cc_nx("Street Cred", 0, None, None, None)
#Now we build all the checks variables
perctup, invetup, perftup, perstup = ("perception", me.skills.perception.value), ("investigation", me.skills.perception.value), ("performance", me.skills.performance.value), ("persuasion", me.skills.persuasion.value)
searchbonus, searchskill, seductbonus, seductskill, perfconbonus = invetup[1] if invetup[1] > perctup[1] else perctup[1], invetup[0] if invetup[1] > perctup[1] else perctup[0], perftup[1] if perftup[1] > perstup[1] else perstup[1], perftup[0] if perftup[1] > perstup[1] else perstup[0], (perftup[1] - charismaMod) + constitutionMod

# iterate through all the repeats
for i in range(repeat):
    # build all the rolls first
    searchroll, seductroll, perfconroll = vroll(rollstr+str(searchbonus)), vroll(rollstr+str(seductbonus)), vroll(rollstr+str(perfconbonus))
    # set the results for each roll
    client = "Noble" if searchroll.total >= 21 else "ModestMan" if searchroll.total >= 15 \
        else "Commoner" if searchroll.total >= 10 else "No Client Found"
    seductroll = vroll("0") if client == "No Client Found" else seductroll
    seduct = "No one to seduce :(" if client == "No Client Found" \
        else f'"Expertly seduce {client}: 25% tip"' if seductroll.total >= 21 \
        else  f'"Tease the {client}: 10% tip"' if seductroll.total >= 15 \
        else f'"Convinced {client} to bed"' if seductroll.total >= 10 \
        else "Seduction Failed: +1 Heat"
    perfconroll = vroll("0") if client == "No Client Found" or seduct == "Seduction Failed: +1 Heat" else perfconroll
    fuck = "No one to do it :(" if client == "No Client Found" or seduct == "No one to seduce :(" \
        else f'"Earth-shattering, {client} impressed: +1 Street Cred  +25% tip"' if perfconroll.total  >= 21 \
        else f'"Earth-shattering {client} impressed: +1 Street Cred"' if perfconroll.total >= 21 and seductroll.total >= 21 \
        else f'{client} satisfied :)"' if perfconroll.total >= 15 \
        else f'{client} finds you acceptable, but unremarkable"' if perfconroll.total >= 10 \
        else "Eww. You did bad : +1 Heat, -1 Street Cred"
    # adds up heat
    newheat += 1 if "Heat" in seduct else 0
    newheat += 1 if "Heat" in fuck else 0
    # adds up Street Cred
    newcred += 1 if "+1 Street" in fuck else 0
    newcred -+ 1 if "-1 Street" in fuck else 0
    # adds up coin bonus
    coinbonus = 1.5 if perfconroll.total >= 21 and seductroll.total >= 21 \
        else 1.25 if seductroll.total >= 21 else 1.1 if seductroll >= 15 else 1
    #builds all the earning rolls based on skills rolls
    if perfconroll >= 21:
        coinroll = vroll("3d8+10") if client == "Noble" \
            else vroll("3d6+30") if client == "ModestMan" \
            else vroll("3d4+10") if client == "Commoner" \
            else vroll("0")
    elif perfconroll >= 15:
        coinroll = vroll("1d10+10") if client == "Noble" \
            else vroll("1d8+30") if client == "ModestMan" \
            else vroll("1d6+10") if client == "Commoner" \
            else vroll("0")
    elif perfconroll >= 10:
        coinroll = vroll("10") if client == "Noble" \
            else vroll("30") if client == "ModestMan" \
            else vroll("10") if client == "Commoner" \
            else vroll("0")
    else:
        coinroll = vroll("0")
    # grabs the coin rolls
    pp, gp = coinroll.total * coinbonus if client == "Noble" else 0, coinroll.total * coinbonus if client != "Noble" else 0
    # converts down to cp
    tpp = floor(pp - (pp-int(pp))) # assigns the full integer of pp to temp pp
    tgp = gp + ((pp-int(pp))* 10) # assigns the remainder of pp and rolled gp to temp gp
    tsp = ((tgp-int(tgp))* 10) #assigns the remainder of tgp to tsp
    tgp = floor(tgp - (tgp-int(tgp))) # assigns the full integer of gp to temp gp
    tcp = ((tsp-int(tsp))* 10) # assigns to remainder of tsp to tcp
    #passes all temp values to new values
    npp += tpp
    ngp += tgp
    nsp += tsp
    ncp += tcp
    #builds the iteration return str
    returnstr += f' -f "__Attempt # {i+1}__|{coinroll}: Bonus = x `{coinbonus}`\n' \
                 f'`{tpp}` pp,`{tgp}` gp, `{tsp}` sp, `{tcp}` cp"\n' \
                 f' -f "**Client Search** | *{searchskill}*\n{searchroll}\nClient: {client}|inline"\n' \
                 f' -f "**Seducing Client** | *{seductskill}*\n {seductroll}\n{seduct}|inline"\n' \
                 f' -f "**Satisfaction Roll** |\n*Constitution(Performance)*\n{perfconroll}\n{fuck}|inline"\n'

# pulls current coins, updates pouch, and pushes it back to cvar
bagsLoaded = load_json(bags)
pouch = ([x for x in bagsLoaded if x[0] == "Coin Pouch"])[0]
opp, ogp, osp, ocp = pouch['pp'], pouch['gp'], pouch['sp'], pouch['cp']
pouch[1].update({'pp':opp+npp,'gp':ogp+ngp,'sp':osp+nsp,'cp':ocp+ncp})
pouch in bagsLoaded or bagsLoaded.append(pouch)
set_cvar("bags",dump_json(bagsLoaded))

returnstr += f' -f "**Getting Paid** | Your coin pouch went from: ' \
    f'`{str(opp)}` => `{str(opp+npp)}` pp \n' \
    f'`{str(ogp)}` => `{str(ogp+ngp)}` gp \n' \
    f'`{str(osp)}` => `{str(osp+nsp)}` sp \n' \
    f'`{str(ocp)}` => `{str(ocp+ncp)}` cp \n' \
    f'Current Heat: `{cc_str("Heat") if cc_exists("Heat") else " " }` \n' \
    f'Current Street Cred: `{cc_str("Street Cred") if cc_exists("Street Cred") else ""}`' \
    f'DT Remaining: `{mod_cc("DT Slot",-2)}{cc_str("DT Slot")}`"' \
    f' -footer "!help dt adult    |  v5 by by mrrobinhood5#1999"' \
    f' -title "{name}: {title}"'
return returnstr
</drac2>